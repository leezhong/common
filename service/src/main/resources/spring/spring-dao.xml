<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/config.properties</value>
                <value>classpath:config/jdbc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc_driverClassName}"/>
        <property name="url"
                  value="${jdbc_url}?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull"/>
        <property name="username" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="maxActive" value="${max_active}"/>
        <property name="initialSize" value="${initial_size}"/>
        <property name="maxWait" value="${max_wait}"/>
        <property name="maxIdle" value="${maxidle}"/>
        <property name="minIdle" value="${minidle}"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="${removeAbandoned_timeout}"/>
        <property name="connectionProperties" value="clientEncoding=UTF-8"/>
        <property name="filters" value="stat,wall"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis-config.xml"
          p:mapperLocations="classpath:mapper/TestUserMapper.xml"
          p:typeAliasesPackage="com.wangli.entity"
    />

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="com.wangli.dao"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"
    />

    <!--事务管理器 与SqlSessionFactoryBean引用的数据源一致-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!--注解方式管理事务-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>